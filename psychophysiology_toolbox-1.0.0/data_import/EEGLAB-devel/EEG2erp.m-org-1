function [erp] = EEG2erp(EEG, inname, outname, elec2add, preERP);

% Convert EEGLAB format *.set data ino Psychophysiology Toolbox (Edward Bernat, Univ of Minnesota) "erp" format data 
% 
% - Before running this script, load the *.set file using EEGLAB ("File -> Load Existing Dataset")
% 
% < Input Arguments >
%  - inname: *.set EEGLAB filename  e.g) '105782_voc'; 
%            - The name of the pre-existing erp file should be the same with the *.set file 
%  - outname: name of the *.mat erp file to be saved.  e.g.) '105782_voc_processed'; 
%  - elec2add: name(s) of channel(s) to be added, which were included in the pre-existing erp data
%              e.g.) {'A2','VEOG','HEOG'}; 
%              - These channels should not be in the channel location
%                file (*.elp or *.locs). 
%              - If there is elec2add, we should have the pre-existing erp data
%              - If there is no elec to be deleted, set "elec2delete = {}";,
%                then we don't need to have the pre-existing erp data. 
% 
%  - preERP: indicate if we have the pre-existing erp file. 
%            - 'yes': then this script will load the previous erp file to
%                     import the required erp fields 
%            - 'no' : then additional processing is required erp fields. 
% 
% - Output file will be saved in a erp format *.mat file with the "outname",  
%   but the output erp file only includes basic data information (erp.data, erp.elec, erp.sweep, erp.samplerate, & erp.tbin). 
% - The other required erp data fields (e.g., erp.stim, erp.AT, ...) should be 
%   1) added from an pre-existing erp data, which was used to generate the *.set file, or  
%      - when "preERP" is 'yes'
%   2) generated by additional processing script later. 
%      - when "preERP" is 'no'
% 
% Seung Suk Kang (Univ. of Minnesota). May 27. 2008. 

% Load pre-existing erp data
if preERP == 'yes', 
    load([inname '.mat']);
end

if isempty(elec2add) == 1,
    numElec = EEG.nbchan;
else numElec = EEG.nbchan + length(elec2add);
    for n=1:length(elec2add)
        elecNum2add(n,:) = strmatch(elec2add{n}, erp.elecnames);
    end
    for n=1:length(EEG.chanlocs)
        elecnamesEEG{n} = EEG.chanlocs(n).labels;
        elecNumEEG(n,:) = strmatch(elecnamesEEG{n}, erp.elecnames);
    end
end

tempsizerows = EEG.trials*numElec; % = numEvents * numElecs
erpt.data       = zeros(tempsizerows,EEG.pnts); 
erpt.elec       = zeros(tempsizerows,1);  
erpt.sweep      = zeros(tempsizerows,1);  

if isempty(elec2add) == 1,
    for n=1:EEG.trials
        cur_range = ((n-1)*EEG.nbchan)+1:((n-1)*EEG.nbchan)+EEG.nbchan;     % original 
        erpt.data(cur_range,:) = EEG.data(:,:,n);                       
        erpt.elec(cur_range,:) = [1:1:EEG.nbchan];                                           
        erpt.sweep(cur_range,:) = ones(EEG.nbchan,1) * n;
    end
else
    for n=1:EEG.trials
        for m=1:length(elecNumEEG)
            erpt.data((n-1)*numElec+elecNumEEG(m,:), :) = EEG.data(m,:,n); 
        end
        for k=1:length(elec2add)
            erpt.data((n-1)*numElec+elecNum2add(k,:), :) = erp.data((n-1)*numElec + elecNum2add(k,:), :);
        end
    end
    erpt.elec = erp.elec;
    erpt.sweep = erp.sweep; 
end
erpt.tbin = round(abs(EEG.xmin)*EEG.srate)+1;

% Add fields of pre-existing erp file 
if preERP == 'yes', 
    fields_1 = fieldnames(erp); 
    fields_2 = fieldnames(erpt); 
    fields = setdiff(fields_1, fields_2); 
    for n=1:length(fields)
        eval(['erpt.' fields{n} ' = erp.' fields{n} ';']); 
    end
    clear erp
end
erp = erpt;
    
% Save erp file
save([outname '.mat'], 'erp'); 


